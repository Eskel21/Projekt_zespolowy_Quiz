@page
@model DisplayQuestionsModel
@{
    ViewData["Title"] = "Display Questions";
}
<div class="text-center">
    @if (Model.Questions != null)
    {

        <div id="questionInfoContainer">
        </div>
        <div id="countdownContainer" class="countdownAnimation">
        </div>
        <div id="questionsContainer">
        </div>
        
            <p id="alert-success" style="display: none">Correct answer!</p>
            <p id="alert-wrong" style="display: none">Wrong answer!</p>
            
        <div id="imageContainer">

            <p id="good" style="display: none;"> <img id="resultImage" src="~/200.gif"> </p>
            <p id="bad" style="display:none;"> <img id="resultImage" src="~/sad.gif"></p>
            <p id="ok" style="display:none;"><img id="resultImage" src="~/rdj.gif"></p>
        </div>
        <div id="resultContainer">
            
            </div>


    }

</div>
<script>
    
    var questions = @Html.Raw(Json.Serialize(Model.Questions));

    
    var questionsContainer = document.getElementById("questionsContainer");
    var countdownContainer = document.getElementById("countdownContainer");
    var questionInfoContainer = document.getElementById("questionInfoContainer");
    var resultContainer = document.getElementById("resultContainer");
    var testContainer = document.getElementById("testContainer");
    var alertsuccess = document.getElementById("alert-success");
    var alertwrong = document.getElementById("alert-wrong");


    
    var currentQuestionIndex = 0;
    var correctAnswersCount = 0;

    var countdownTime = 20; 
    var countdownInterval; 
    var countdownActive = false; 


    
    function displayNextQuestion() {
        
        questionsContainer.innerHTML = "";
        countdownContainer.innerHTML = "";

        if (countdownActive) {
           
            clearInterval(countdownInterval);
            countdownActive = false;
        }

        if (currentQuestionIndex < questions.length) {
            var currentQuestion = questions[currentQuestionIndex];

            
            questionInfoContainer.innerHTML = "Question " + (currentQuestionIndex + 1) + "/" + questions.length;

            var paragraf = document.createElement("p");
            
            paragraf.id = "content";
            paragraf.innerHTML += currentQuestion.question;
            questionsContainer.appendChild(paragraf);

            
            for (var key in currentQuestion.answers) {
                if (currentQuestion.answers.hasOwnProperty(key) && currentQuestion.answers[key] !== null) {
                    var answerDiv = document.createElement("div");
                    var button = document.createElement("button");
                    button.id = "answer_button";
                    button.innerHTML = key.slice(-1) + ") " + currentQuestion.answers[key];
                    button.addEventListener("click", function (event) {
                        
                        var selectedKey = event.target.innerHTML.split(")")[0];
                        checkAnswer(selectedKey, currentQuestion);
                        console.log(selectedKey);
                        disableAllButtons();
                        setTimeout(function () {
                            displayNextQuestion();
                            alertsuccess.style.display = "none";
                            alertwrong.style.display = "none";
                        }, 3000); 
                    });
                    answerDiv.appendChild(button);
                    questionsContainer.appendChild(answerDiv);
                }
            }



            
            startCountdown();

            currentQuestionIndex++;
        } else {
            questionInfoContainer.innerHTML = ""; 
            displayResults();
           
        }
       
           
        
    }
    function disableAllButtons() {
        var buttons = document.getElementsByTagName("button");
        for (var i = 0; i < buttons.length; i++) {
            buttons[i].disabled = true;
        }
    }
    function checkAnswer(selectedKey, currentQuestion) {
        var s = currentQuestion.correct_Answers;
        if (s["answer_" + selectedKey + "_Correct"]) {
            correctAnswersCount++;
            alertsuccess.style.display = "block";
        }
        else {
            alertwrong.style.display = "block";
        }
        //console.log(s);



    }


    
    function startCountdown() {
        countdownTime = 19; 
        countdownActive = true; 
        countdownContainer.innerHTML = "Time left: 20s";
        countdownContainer.style.animation = 'none';
        countdownContainer.offsetHeight; 
        countdownContainer.style.animation = null;
        
        countdownInterval = setInterval(function () {
            countdownContainer.innerHTML = "Time left: " + countdownTime + "s";

            if (countdownTime <= 0) {
                clearInterval(countdownInterval);
                countdownActive = false; 
                displayNextQuestion();
                countdownTime = 20;
                
            }

            countdownTime--;
        }, 1000);
    }



   
    function displayResults() {
        var paragraph_bad = document.getElementById("bad");
        var paragraph_good = document.getElementById("good");
        var paragraph_ok = document.getElementById("ok");
        var score = correctAnswersCount / questions.length;
        if (score >= 0.8) {
            paragraph_good.style.display = "block";
        }
        else {
            if (score >= 0.5) {
                paragraph_ok.style.display = "block";
            }
            else {
                paragraph_bad.style.display = "block";
            }
        }
        
        resultContainer.innerHTML = "Wynik: " + correctAnswersCount + "/" + questions.length + '<img src="~/200.gif">';
        countdownContainer.remove();
        questionInfoContainer.remove();
        questionsContainer.remove();
        alertsuccess.style.display = "none";
        alertwrong.style.display = "none";
        var url = "/Score?correctAnswers=" + correctAnswersCount + "&totalQuestions=" + questions.length;


        window.location.href = url;
       
    }

    
    displayNextQuestion();
</script>