


@page

@model IndexModel
@{
    ViewData["Title"] = "Home page";
}
<form method="post">
    <div class="form-group">
        <label for="SelectedCategory">Kategoria:</label>
        <select class="form-control" id="category" asp-for="SelectedCategory">
            <option value="">Wybierz kategorię</option>
            <option value="linux">Linux</option>
            <option value="bash">Bash</option>
            <option value="uncategorized">Uncategorized</option>
            <option value="docker">Docker</option>
            <option value="sql">SQL</option>
            <option value="cms">CMS</option>
            <option value="code">Code</option>
            <option value="devops">DevOps</option>
        </select>
    </div>
    <div class="form-group">
        <label for="SelectedDifficulty">Poziom trudności:</label>
        <select class="form-control" id="difficulty" asp-for="SelectedDifficulty">
            <option value="">Wybierz poziom trudności</option>
            <option value="easy">Easy</option>
            <option value="medium">Medium</option>
            <option value="hard">Hard</option>
        </select>
    </div>
   
    <div class="form-group">
        <label for="SelectedLimit">Limit pytań:</label>
        <select class="form-control" id="limit" asp-for="SelectedLimit">
            <option value="">20</option>
            <option value="1">1</option>
            <option value="2">2</option>
            <option value="3">3</option>
            <option value="4">4</option>
            <option value="5">5</option>
            <option value="6">6</option>
            <option value="7">7</option>
            <option value="8">8</option>
            <option value="9">9</option>
            <option value="10">10</option>
            <option value="11">11</option>
            <option value="12">12</option>
            <option value="13">13</option>
            <option value="14">14</option>
            <option value="15">15</option>
            <option value="16">16</option>
            <option value="17">17</option>
            <option value="18">18</option>
            <option value="19">19</option>
            <option value="20">20</option>

        </select>
    </div>
    <button type="submit">Wyświetl pytania</button>
</form>

<div class="text-center">
    <h1 class="display-4">Quiz Questions</h1>
    @if (Model.Questions != null)
    {
        <table>
            <thead>
                <tr>
                    <th>Question</th>
                    <th>Id </th>
                    <th>Answers</th>
                    <th>MultipleCorrectAnswers </th>
                    <th>Correct Answers</th>
                    <th>Correct Answer</th>
                    <th>Category</th>
                    <th>Difficulty</th>
                </tr>
            </thead>
            <tbody>
                @{
                  List<QuestionModel> Pytania = new List<QuestionModel>();
                }
                @foreach (var question in Model.Questions)
                {
                    
                        Pytania.Add(question);
                }
                @foreach(var pytanie in Pytania)
                {
                    <tr>
                        <td>@pytanie.Question</td>
                        <td>@pytanie.Id</td>
                        <td>
                            <ul>
                                <li>@pytanie.Answers.Answer_A</li>
                                <li>@pytanie.Answers.Answer_B</li>
                                <li>@pytanie.Answers.Answer_C</li>
                                <li>@pytanie.Answers.Answer_D</li>
                                <li>@pytanie.Answers.Answer_E</li>
                                <li>@pytanie.Answers.Answer_F</li>
                            </ul>
                        </td>
                        <td>@pytanie.MultipleCorrectAnswers</td>
                        <td>
                            <ul>
                                <li>@pytanie.Correct_Answers.Answer_A_Correct.ToString()</li>
                                <li>@pytanie.Correct_Answers.Answer_B_Correct.ToString()</li>
                                <li>@pytanie.Correct_Answers.Answer_C_Correct.ToString()</li>
                                <li>@pytanie.Correct_Answers.Answer_D_Correct.ToString()</li>
                                <li>@pytanie.Correct_Answers.Answer_E_Correct.ToString()</li>
                                <li>@pytanie.Correct_Answers.Answer_F_Correct.ToString()</li>
                            </ul>
                        </td>
                        <td>@pytanie.Correct_Answer</td>
                        <td>@pytanie.Category</td>
                        <td>@pytanie.Difficulty</td>
                    </tr>
                }
            </tbody>
        </table>
        <div id="questionsContainer">
                       
        </div>

        <button id="nextButton">Next Question</button>
    }
    else
    {
        <p>Brak dostępnych pytań.</p>
    }
</div>
<script>
    // Tablica z pytaniami
    var questions = @Html.Raw(Json.Serialize(Model.Questions));
   

    // Pobierz referencje do elementów DOM
    var questionsContainer = document.getElementById("questionsContainer");
    var nextButton = document.getElementById("nextButton");

    // Zmienna do przechowywania aktualnego indeksu pytania
    var currentQuestionIndex = 0;

    // Funkcja do wyświetlania pytania
    function displayNextQuestion() {
        if (currentQuestionIndex < questions.length) {
            var currentQuestion = questions[currentQuestionIndex];
            

            // Log the entire currentQuestion object to the console
            console.log(currentQuestion);

            // Assuming 'text' is the property containing the question text, modify this line accordingly
            if (currentQuestion.answers.answer_A != null && currentQuestion.answers.answer_B != null && currentQuestion.answers.answer_C != null && currentQuestion.answers.answer_D != null && currentQuestion.answers.answer_E != null && currentQuestion.answers.answer_F != null) {

                questionsContainer.innerHTML = currentQuestion.question + "<br>" + "A " + currentQuestion.answers.answer_A + "<br>" + "B " + currentQuestion.answers.answer_B + "<br>" + "C " + currentQuestion.answers.answer_C + "<br>" + "D " + currentQuestion.answers.answer_D + "<br>" + "E " + currentQuestion.answers.answer_E + "<br>" + "F " + currentQuestion.answers.answer_F + "<br>";
            }
            else if (currentQuestion.answers.answer_A != null && currentQuestion.answers.answer_B != null && currentQuestion.answers.answer_C != null && currentQuestion.answers.answer_D != null && currentQuestion.answers.answer_E != null) {
                questionsContainer.innerHTML = currentQuestion.question + "<br>" + "A " + currentQuestion.answers.answer_A + "<br>" + "B " + currentQuestion.answers.answer_B + "<br>" + "C " + currentQuestion.answers.answer_C + "<br>" + "D " + currentQuestion.answers.answer_D + "<br>" + "E " + currentQuestion.answers.answer_E + "<br>";
            }
            else if (currentQuestion.answers.answer_A != null && currentQuestion.answers.answer_B != null && currentQuestion.answers.answer_C != null && currentQuestion.answers.answer_D != null) {
                questionsContainer.innerHTML = currentQuestion.question + "<br>" + "A " + currentQuestion.answers.answer_A + "<br>" + "B " + currentQuestion.answers.answer_B + "<br>" + "C " + currentQuestion.answers.answer_C + "<br>" + "D " + currentQuestion.answers.answer_D + "<br>";
            }
            else if (currentQuestion.answers.answer_A != null && currentQuestion.answers.answer_B != null && currentQuestion.answers.answer_C != null) {
                questionsContainer.innerHTML = currentQuestion.question + "<br>" + "A " + currentQuestion.answers.answer_A + "<br>" + "B " + currentQuestion.answers.answer_B + "<br>" + "C " + currentQuestion.answers.answer_C + "<br>";
            }
            else if (currentQuestion.answers.answer_A != null && currentQuestion.answers.answer_B != null) {
                questionsContainer.innerHTML = currentQuestion.question + "<br>" + "A " + currentQuestion.answers.answer_A + "<br>" + "B " + currentQuestion.answers.answer_B + "<br>";
            }
           
            currentQuestionIndex++;
        } else {
            questionsContainer.innerHTML = "Koniec pytań!";
        }
    }

    // Dodaj obsługę zdarzenia kliknięcia przycisku
    nextButton.addEventListener("click", displayNextQuestion);

    // Wywołaj funkcję, aby wyświetlić pierwsze pytanie
    displayNextQuestion();
</script>









